name: Trigger Pipeline on Folder Change

on:
  push:
    branches:
      - main

jobs:
  check-folder-changes:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Create a temporary file to store the output of git diff
      run: |
        temp_file=$(mktemp)
        git diff --name-only ${{ github.event.before }} ${{ github.sha }} > "$temp_file"
        echo "::set-output name=temp_file::$temp_file"
      shell: bash

    - name: Determine Changed Files
      id: changed_files
      run: |
        temp_file="${{ steps.create-temp-file.outputs.temp_file }}"
        file_list=()
        while IFS= read -r file; do
          file_list+=("$file")
        done < "$temp_file"
        echo "::set-output name=changed_files::${file_list[*]}"
      shell: bash

    - name: Determine Changed Folders
      id: changed_folders
      run: |
        # Create a temporary file to store the output of git diff
        temp_file=$(mktemp)
        echo "=============== list modified files ==============="
        git diff --name-only HEAD^ HEAD
        echo "=============== list modified files ==============="
        git diff --name-only HEAD^ HEAD > "$temp_file"
        
        # Initialize an empty file_list array
        file_list=()
        
        # Populate the file_list array by reading from the temporary file
        while IFS= read -r file; do
          file_list+=("$file")
        done < "$temp_file"
        
        # Clean up the temporary file
        rm "$temp_file"
        
        # Print the contents of the file_list
        for file in "${file_list[@]}"; do
          echo "File1: $file"
        done


