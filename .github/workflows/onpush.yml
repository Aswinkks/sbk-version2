name: Trigger Pipeline on Folder Change

on:
  push:
    branches:
      - main

jobs:
  check-folder-changes:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: check modified files
      id: check_files
      run: |
        echo "=============== list modified files ==============="
        git diff --name-only HEAD^ HEAD
        
        echo "========== check paths of modified files =========="
        git diff --name-only HEAD^ HEAD &gt; files.txt
        while IFS= read -r file
        do
          echo $file
          if [[ $file != db/* ]]; then
            echo "This modified file is not under the 'db' folder."
            echo "::set-output name=run_job::false"
            break
          else
            echo "::set-output name=run_job::true"
          fi
        done &lt; files.txt

    - name: Determine Changed Folders
      id: changed_folders
      run: |
        # Create a temporary file to store the output of git diff
        temp_file=$(mktemp)
        echo "=============== list modified files ==============="
        git diff --name-only HEAD^ HEAD
        echo "=============== list modified files ==============="
        git diff --name-only HEAD^ HEAD > "$temp_file"
        
        # Initialize an empty file_list array
        file_list=()
        
        # Populate the file_list array by reading from the temporary file
        while IFS= read -r file; do
          file_list+=("$file")
        done < "$temp_file"
        
        # Clean up the temporary file
        rm "$temp_file"
        
        # Print the contents of the file_list
        for file in "${file_list[@]}"; do
          echo "File1: $file"
        done


